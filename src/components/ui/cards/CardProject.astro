---
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

const { project } = Astro.props;

interface Props {
  project: CollectionEntry<"projects">;
}
---

<a
  class="group relative block rounded-xl outline-hidden ring-zinc-500 transition duration-500 focus-visible:ring-3 dark:ring-zinc-200 dark:focus:outline-hidden"
  href={`/proyectos/${project.id}`}
  data-astro-prefetch
>
  <div class="relative h-[300px] w-full shrink-0 overflow-hidden rounded-xl">
    <Image
      class="absolute start-0 top-0 size-full object-cover transition duration-500 group-hover:scale-110"
      src={project.data.cardImage}
      alt={project.data.cardImageAlt}
      draggable={"false"}
      loading={"eager"}
      format={"avif"}
    />
    
    <!-- Overlay gradient -->
    <div class="absolute inset-0 bg-linear-to-t from-neutral-900/80 via-transparent to-transparent"></div>
    
    <!-- Category badge -->
    <div class="absolute top-4 left-4">
      <span class="inline-block rounded-full bg-orange-500/90 px-3 py-1 text-xs font-medium text-white">
        {project.data.category}
      </span>
    </div>
    
    <!-- Project info -->
    <div class="absolute bottom-0 left-0 right-0 p-6">
      <h3 class="mb-2 text-xl font-bold text-white group-hover:text-neutral-200">
        {project.data.title}
      </h3>
      <p class="mb-3 text-sm text-neutral-200">
        {project.data.description}
      </p>
      
      <!-- Technologies -->
      <div class="flex flex-wrap gap-1">
        {project.data.technologies.slice(0, 3).map((tech) => (
          <span class="inline-block rounded bg-neutral-800/60 px-2 py-1 text-xs text-neutral-200">
            {tech}
          </span>
        ))}
        {project.data.technologies.length > 3 && (
          <span class="inline-block rounded bg-neutral-800/60 px-2 py-1 text-xs text-neutral-200">
            +{project.data.technologies.length - 3}
          </span>
        )}
      </div>
    </div>
  </div>
</a>